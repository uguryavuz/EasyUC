load ReadWriteGeneric.

functionality ReadWriteGeneric.RW_Real.

prover [""].

var pt : port.
assumption envport_pt : envport func pt.

real.
(* Initialize to 5 *)
send pt@ReadWriteGeneric.IO.D.init_with(5)$func.
run.
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.init_ok$func.
run.
(* Process #1: Read, run to completion *)
send pt@ReadWriteGeneric.IO.D.inv(1, Read, None)$func.
run.
(* -- Move from invoked to R1 *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* -- R1 to termination *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* -- Return value at termination back to environment *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* Process #1: Write 10, run the initial read only *)
send pt@ReadWriteGeneric.IO.D.inv(1, Write, Some 10)$func.
run.
(* -- Move from invoked to W1 *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* -- W1 to W2 *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* Process #2: Write 15, run to completion *)
send adv_root_port@_@env_root_port.
run.
send pt@ReadWriteGeneric.IO.D.inv(2, Write, Some 15)$func.
run.
(* -- Move from invoked to W1 *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(2)$func.
run.
(* -- W1 to W2 *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(2)$func.
run.
(* -- W2 to termination *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(2)$func.
run.
(* -- Return value at termination back to environment *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(2)$func.
run.
(* Process #1: Continue the write *)
send env_root_port@_@adv_root_port.
run.
(* -- W2 to W1; note the failing CAS and hence the going back *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* -- W1 to W2 *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* -- W2 to termination *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
(* -- Return value at termination back to environment *)
send ((adv, 2))@ReadWriteGeneric.Scheduler_Real.A.resume(1)$func.
run.
finish.

ideal.
send pt@ReadWriteGeneric.IO_Init.I.initialize(5)$func.
step.
step.
(* FAILURE: fails here due to always-failing dummy simulator. *)
send ((adv, 1))@ReadWriteGeneric.Scheduler_Real_Ideal.initialization_ok$func.

